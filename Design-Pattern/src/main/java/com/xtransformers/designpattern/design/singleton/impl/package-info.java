/**
 * 实现方式，关注点：
 * 1. 构造函数私有化
 * 2. 对象创建时线程安全问题
 * 3. 是否支持延迟加载
 * 4. 考虑 getInstance 性能是否高，是否加锁
 * <p>
 * 实现方式：
 * 1. 饿汉式
 * 优点：实例创建时是线程安全的
 * 缺点：不支持延迟加载
 * <p>
 * 2. 懒汉式
 * 优点：支持延迟加载
 * 缺点：因为加锁，并发度低，不支持高并发
 * <p>
 * 3. 双重检测
 * 优点：支持延迟加载，支持高并发
 * 缺点：可能指令重排，加上 volatile 关键字，高版本 Java 已经解决了
 * <p>
 * 4. 静态内部类
 * 优点：支持延迟加载，支持高并发，JVM 保证实例唯一性、线程安全性
 * <p>
 * 5. 枚举
 * Java 枚举类型本身的特性，保证实例创建的线程安全性和实例唯一性
 */
package com.xtransformers.designpattern.design.singleton.impl;